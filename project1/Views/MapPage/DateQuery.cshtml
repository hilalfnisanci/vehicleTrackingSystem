@model IEnumerable<trackingSystem.Models.VehicleModel>
@{
    ViewBag.Title = "DateQuery";
    Layout = "~/Views/_LayoutUser.cshtml";
}

<!doctype html>
<html lang="en">
<head>
    <title>Sidebar 01</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700,800,900" rel="stylesheet">

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="Css/style.css">
</head>
<body>
    <div class="wrapper d-flex align-items-stretch">
        <nav id="sidebar">
            <div class="p-4 pt-5">
                <a class="navbar-brand" href="#">
                    <img src="~/Images/logo.png" alt="Logo" style="width:40px;">
                </a>
                <ul class="list-unstyled components mb-5">
                    <li><a @Html.ActionLink("Ana Sayfa", "HomePage", "HomePage")></a></li>
                    <li><a @Html.ActionLink("Hesap", "InfoPage", "InfoPage")></a></li>
                    <li class="active"><a href="#">Araçlar</a></li>
                </ul>

            </div>
        </nav>

        <div id="content" class="p-4 p-md-5">

            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="container-fluid">

                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="nav navbar-nav ml-auto">
                            <li class="nav-item">
                                <a class="nav-link" @Html.ActionLink("Ana Sayfa", "HomePage", "HomePage")></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" @Html.ActionLink("Hesap", "InfoPage", "InfoPage")></a>
                            </li>
                            <li class="nav-item active">
                                <a class="nav-link" href="#">Araçlar</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" @Html.ActionLink("Çıkış", "Login", "Login")></a>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>

            @using (Html.BeginForm("DateQuery", "MapPage", new { userID = Session["UserID"] }, FormMethod.Post, null))
            {
                <form>
                    <div class="form-group">
                        <input type="text" name="start" id="start" class="form-control" placeholder="Başlangıç tarihi" />
                    </div>
                    <div class="form-group">
                        <input type="text" name="end" id="end" class="form-control" placeholder="Bitiş tarihi" />
                    </div>
                    <div class="form-group">
                        <input type="submit" name="submit" class="btn" value="Submit" />
                    </div>
                </form>

            }
            <div>
                <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
                <link rel="stylesheet" type="text/css" href="./style.css" />

                <div id="map"></div>

                <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
                <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDQLSRM_GswQabJ3Dmi3istNGBiuMStdCs&callback=initMap&v=weekly"
                        async></script>

            </div>
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Date_and_Time)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Latitude)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Longitude)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Car_ID)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date_and_Time)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Latitude)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Longitude)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Car_ID)
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>
    <script>
                let map;
                let markers = [];
                var cars = @Html.Raw(Json.Encode(Model));
                function initMap() {

                    var uluru = { lat: 59.2565771, lng: 18.0137511};

                    map = new google.maps.Map(document.getElementById("map"), {
                        zoom: 8,
                        center: uluru,
                    });

                    function displayMarkers() {
                        var loc;
                        for (var i = 0; i < cars.length; i++) {
                            loc = { lat: parseFloat(cars[i]['Latitude']), lng: parseFloat(cars[i]['Longitude']) };
                            addCarMarks(loc, cars[i].Car_ID);
                        }
                    }
                    displayMarkers();
                    setInterval(function () {
                        location.reload();
                    }, 60000);
                }

                function addCarMarks(position, carId) {

                    var colorChoose = cars[0].Car_ID;
                    const marker = new google.maps.Marker({
                        position: position,
                        visible: true,
                        map: map,
                        icon: carId == colorChoose ? "http://maps.google.com/mapfiles/ms/icons/blue-dot.png" : "http://maps.google.com/mapfiles/ms/icons/pink-dot.png"
                    });

                    markers.push(marker);
                }

                // Sets the map on all markers in the array.
                function setMapOnAll(map) {
                    for (let i = 0; i < markers.length; i++) {
                        markers[i].setMap(map);
                    }
                }

                // Removes the markers from the map, but keeps them in the array.
                function hideMarkers() {
                    setMapOnAll(null);
                }

                // Shows any markers currently in the array.
                function showMarkers() {
                    setMapOnAll(map);
                }

                // Deletes all markers in the array by removing references to them.
                function deleteMarkers() {
                    hideMarkers();
                    markers = [];
                }

    </script>
    <script src="Scripts/jquery.min.js"></script>
    <script src="Scripts/popper.js"></script>
    <script src="Scripts/bootstrap.min.js"></script>
    <script src="Scripts/main.js"></script>
</body>
</html>

